{"title":"Assignment 1: Census Data Quality for Policy Decisions","markdown":{"yaml":{"title":"Assignment 1: Census Data Quality for Policy Decisions","subtitle":"Evaluating Data Reliability for Algorithmic Decision-Making","author":"Kavana Raju","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo"}},"execute":{"warning":false,"message":false},"editor":{"markdown":{"wrap":72}}},"headingText":"Assignment Overview","containsRefs":false,"markdown":"\n\n\n## Scenario\n\nYou are a data analyst for the **Pennsylvania Department of Human\nServices**. The department is considering implementing an algorithmic\nsystem to identify communities that should receive priority for social\nservice funding and outreach programs. Your supervisor has asked you to\nevaluate the quality and reliability of available census data to inform\nthis decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess\nnot just what the data shows, but how reliable it is and what\ncommunities might be affected by data quality issues.\n\n## Learning Objectives\n\n-   Apply dplyr functions to real census data for policy analysis\n-   Evaluate data quality using margins of error\n-   Connect technical analysis to algorithmic decision-making\n-   Identify potential equity implications of data reliability issues\n-   Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your\nassignment should be accessible at\n`your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this\nassignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an\n`assignments/assignment_1/` folder structure. Update your navigation\nmenu to include:\n\n```         \n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n```\n\nIf there is a special character like comma, you need use double quote\nmark so that the quarto can identify this as text\n\n# Setup\n\n```{r setup}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\nlibrary(dplyr)\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\nlibrary(knitr)\nlibrary(stringr)\nlibrary(scales)\nlibrary(kableExtra)\n\n# Set your Census API key\ncensus_api_key(Sys.getenv(\"52f0462d8b4e1e19ee64b25a3196677c5e32e660\"))\n\n# Choose your state for analysis - assign it to a variable called my_state\nmy_state <- \"PA\"\n\n```\n\n**State Selection:** I have chosen **Pennsylvania** for this analysis\nbecause: the scenario explicitly involves the Pennsylvania Department of\nHuman Services, and PA's mix of urban, suburban, and rural counties\nprovides useful variation in ACS reliability for evaluating algorithmic\ndecisions.\n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your\nchosen state.\n\n**Requirements:** - Geography: county level - Variables: median\nhousehold income (B19013_001) and total population (B01003_001)\\\n- Year: 2022 - Survey: acs5 - Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the\n`variables = c(name = \"code\")` syntax.\n\n```{r county-data}\n# Write your get_acs() code here\ncounty_vars = c(\n  med_hh_income = \"B19013_001\",\n  total_pop = \"B01003_001\"\n  )\n\ncounty_data <- get_acs(\n  geography = \"county\",\n  state = my_state,\n  year = 2022,\n  survey = \"acs5\",\n  variables = county_vars,\n  output = \"wide\",\n)\n\n# Clean the county names to remove state name and \"County\"\ncounty_data <- county_data %>%\n  mutate(county_name = str_remove(NAME, paste0(\", \", \"Pennsylvania\")) %>%\n           str_remove(\"County\")\n  )\n  \n# Hint: use mutate() with str_remove()\n\n# Display the first few rows\nhead(county_data)\n\nglimpse(county_data)\n```\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create\nreliability categories.\n\n**Requirements:** - Calculate MOE percentage: (margin of error /\nestimate) \\* 100 - Create reliability categories: - High Confidence: MOE\n\\< 5% - Moderate Confidence: MOE 5-10%\\\n- Low Confidence: MOE \\> 10% - Create a flag for unreliable estimates\n(MOE \\> 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n```{r income-reliability}\n# Calculate MOE percentage and reliability categories using mutate()\ncounty_cat <- county_data %>%\n  mutate(moe_perc = ((med_hh_incomeM / med_hh_incomeE) * 100) , \n           reliability = case_when(moe_perc < 5 ~ \"High Confidence\", \n                                   moe_perc < 10 ~ \"Moderate Confidence\",\n                                   TRUE ~ \"Low Confidence\")\n         )\n\n# Create a summary showing count of counties in each reliability category\ncounty_cat %>%\n  count(reliability, name = \"count\") %>%\n  mutate(share = scales::percent(count / sum(count)))\n\n# Hint: use count() and mutate() to add percentages\n```\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:** - Sort by MOE percentage (highest first) - Select the\ntop 5 counties - Display: county name, median income, margin of error,\nMOE percentage, reliability category - Format as a professional table\nusing `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n```{r high-uncertainty}\n# Create table of top 5 counties by MOE percentage\ntop5_uncertain <- county_cat %>%\n  arrange(desc(moe_perc)) %>%\n  slice(1:5) %>%\n  transmute(\n    county        = county_name,\n    median_income = paste0(\"$\", format(round(med_hh_incomeE), big.mark=\",\")),\n    moe_dollars   = paste0(\"$\", format(round(med_hh_incomeM), big.mark=\",\")),\n    moe_percent   = sprintf(\"%.1f%%\", moe_perc),\n    reliability\n  )\n\n# Format as table with kable() - include appropriate column names and caption\ntop5_uncertain %>%\n  kable(\n    col.names = c(\"County\",\"Median Income\",\"MOE ($)\",\"MOE (%)\",\"Reliability\"),\n    caption   = \"Top 5 Counties by Median Income MOE% (Highest First)\",\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"l\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n**Data Quality Commentary:**\n\nAcross Pennsylvania, the counties with the largest income MOE are small counties such as Forest, Sullivan, Union, Montour, and Elk, with MOE between 6% and 10%. If an algorithm ranks counties by median income without accounting for this uncertainty, these counties can be misclassified because of sampling error and may cross decision thresholds incorrectly. Because they have smaller populations, they should be treated with caution and considered for manual review or aggregation to larger geographies.\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for\ndetailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability\nlevels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to\ncompare how data quality varies.\n\n```{r select-counties}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\ncounty_cat <- county_cat %>% mutate(county_code = substr(GEOID, 3, 5))\n\nselected_counties <- county_cat %>%\n  filter(reliability %in% c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\")) %>%\n  group_by(reliability) %>%\n  slice_head(n = 1) %>%\n  ungroup() %>%\n  select(county_code, county_name, med_hh_incomeE, med_hh_incomeM, moe_perc, reliability)\n\n# Display the selected counties with their key characteristics\nselected_counties %>%\n  dplyr::mutate(\n    `Median Income` = paste0(\"$\", format(round(med_hh_incomeE), big.mark=\",\")),\n    `MOE (%)`       = sprintf(\"%.1f%%\", moe_perc)\n  ) %>%\n  dplyr::select(\n    County = county_name, `Median Income`, `MOE (%)`, Reliability = reliability\n  ) %>%\n  kable(caption = \"Selected Counties for Tract-Level Study\") %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\")) \n\n# Show: county name, median income, MOE percentage, reliability category\n```\n\n**Comment on the output:** Both chosen counties are at the high and moderate confidence levels. The absence of any low confidence counties suggests that county level income is measured with fair stability across the state, though smaller rural places may still sit near the threshold and deserve careful review.\n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected\ncounties.\n\n**Requirements:** - Geography: tract level - Variables: white alone\n(B03002_003), Black/African American (B03002_004), Hispanic/Latino\n(B03002_012), total population (B03002_001) - Use the same state and\nyear as before - Output format: wide - **Challenge:** You'll need county\ncodes, not names. Look at the GEOID patterns in your county data for\nhints.\n\n```{r tract-demographics}\n# Define your race/ethnicity variables with descriptive names\nrace_vars <- c(\n  total    = \"B03002_001\",\n  white    = \"B03002_003\",\n  black    = \"B03002_004\",\n  hispanic = \"B03002_012\"\n)\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\nselected_codes <- selected_counties$county_code\n\ntract_raw <- get_acs(\n  geography = \"tract\",\n  state     = my_state,\n  county    = selected_codes,\n  variables = race_vars,\n  year      = 2022,\n  survey    = \"acs5\",\n  output    = \"wide\"\n)\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\n# Add readable tract and county name columns using str_extract() or similar\n\ntract_data <- tract_raw %>%\n  mutate(county_code = substr(GEOID, 9, 11)) %>%\n  separate(NAME, into = c(\"tract_name\", \"county\", \"state\"),\n           sep = \";\\\\s*\", remove = FALSE, fill = \"right\") %>%\n  mutate(\n    pct_white   = (100 * whiteE    / totalE),\n    pct_black   = (100 * blackE    / totalE),\n    pct_hisp    = (100 * hispanicE / totalE)\n  ) %>%\n  select(-state)\n\n```\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n```{r demographic-analysis}\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\n\ntop_hispanic_tracts <- tract_data %>%\n  group_by(county) %>%\n  arrange(desc(pct_hisp), .by_group = TRUE) %>%\n  slice(1) %>%\n  ungroup() %>%\n  transmute(\n    Tract = tract_name,\n    County = county,\n    `Pct Hispanic/Latino` = pct_hisp,\n    `Total Pop` = totalE\n  )\n\ntop_hispanic_tracts %>%\n  kable(\n    caption   = \"Top % Hispanic/Latino Tract in Each Selected County\",\n    col.names = c(\"County\",\"Tract\",\"Pct Hispanic/Latino\",\"Total Pop\"),\n    align     = c(\"l\",\"l\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\n\ncounty_avgs <- tract_data %>%\n  group_by(county) %>%\n  summarise(\n    Tracts = n(),\n    `Avg % White` = mean(pct_white, na.rm = TRUE),\n    `Avg % Black` = mean(pct_black, na.rm = TRUE),\n    `Avg % Hispanic/Latino` = mean(pct_hisp, na.rm = TRUE)\n  ) %>%\n  rename(County = county)\n\n# Create a nicely formatted table of your results using kable()\ncounty_avgs %>%\n  knitr::kable(\n    caption   = \"Average Demographics by County (Selected Counties)\",\n    col.names = c(\"County\",\"Tracts\",\"Avg % White\",\"Avg % Black\",\"Avg % Hispanic/Latino\"),\n    digits    = c(NA, 0, 2, 2, 2),      # one decimal place for % cols\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"r\")\n  ) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see\nif some communities have less reliable data.\n\n**Requirements:** - Calculate MOE percentages for each demographic\nvariable - Flag tracts where any demographic variable has MOE \\> 15% -\nCreate summary statistics\n\n```{r demographic-moe}\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\ntract_moe <- tract_data %>%\n  mutate(\n    moe_pct_white = ifelse(whiteE    > 0, 100 * whiteM    / whiteE,    NA_real_),\n    moe_pct_black = ifelse(blackE    > 0, 100 * blackM    / blackE,    NA_real_),\n    moe_pct_hisp  = ifelse(hispanicE > 0, 100 * hispanicM / hispanicE, NA_real_),\n    high_moe_any  = (moe_pct_white > 15) | (moe_pct_black > 15) | (moe_pct_hisp > 15)\n  )\n\n# Create summary statistics showing how many tracts have data quality issues\nsummary_tract_moe <- tract_moe %>%\n  group_by(county) %>%\n  summarise(\n    `Tracts (total)`    = n(),\n    `Tracts (high MOE)` = sum(high_moe_any, na.rm = TRUE),\n    `Share high MOE`    = sprintf(\"%.2f%%\", 100 * `Tracts (high MOE)` / `Tracts (total)`)\n  )\n\nsummary_tract_moe %>%\n  kable(\n    col.names = c(\"County\",\"Tracts\",\"High MOE\",\"Share high MOE\"),\n    caption   = \"High-MOE Tracts by County\",\n    align     = c(\"l\",\"r\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly\ndistributed or concentrated in certain types of communities.\n\n```{r pattern-analysis}\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n# Use group_by() and summarize() to create this comparison\n\ntract_pattern <- tract_moe %>%\n  mutate(high_moe_any = ifelse(is.na(high_moe_any), FALSE, high_moe_any)) %>%\n  group_by(county, high_moe_any) %>%\n  summarise(\n    Tracts                 = n(),\n    `Avg Pop`              = mean(totalE, na.rm = TRUE),\n    `Avg % White`          = mean(pct_white, na.rm = TRUE),\n    `Avg % Black`          = mean(pct_black, na.rm = TRUE),\n    `Avg % Hispanic/Latino`= mean(pct_hisp,  na.rm = TRUE),\n    .groups = \"drop_last\"\n  ) %>%\n  mutate(Group = if_else(high_moe_any, \"High-MOE tracts\", \"Other tracts\")) %>%\n  ungroup() %>%\n  rename(County = county) %>%\n  select(County, Group, Tracts, `Avg Pop`, `Avg % White`, `Avg % Black`, `Avg % Hispanic/Latino`)\n\n# Create a professional table showing the patterns\ntract_pattern %>%\n  kable(\n    caption = \"Comparing Tracts With vs. Without High MOE (Any Demographic Variable)\",\n    digits  = c(NA,NA, 0, 0, 2, 2, 2),\n    align   = c(\"l\",\"l\",\"r\",\"r\",\"r\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n**Pattern Analysis:** \\[Describe any patterns you observe. Do certain\ntypes of communities have less reliable data? What might explain this?\\]\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from\nall four analyses.\n\n**Executive Summary Requirements:** 1. **Overall Pattern\nIdentification**: What are the systematic patterns across all your\nanalyses? 2. **Equity Assessment**: Which communities face the greatest\nrisk of algorithmic bias based on your findings? 3. **Root Cause\nAnalysis**: What underlying factors drive both data quality issues and\nbias risk? 4. **Strategic Recommendations**: What should the Department\nimplement to address these systematic issues?\n\n**Executive Summary:**\n\n\\[Your integrated 4-paragraph summary here\\]\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n```{r recommendations-data}\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\nrec_table <- county_cat %>%\n  transmute(\n    County          = county_name,\n    `Median Income` = scales::dollar(round(med_hh_incomeE)),\n    `MOE (%)`       = sprintf(\"%.2f%%\", moe_perc),\n    Reliability     = reliability,\n    Recommendation  = case_when(\n      Reliability == \"High Confidence\"     ~ \"Safe for algorithmic decisions\",\n      Reliability == \"Moderate Confidence\" ~ \"Use with caution — monitor outcomes\",\n      TRUE                                 ~ \"Requires manual review or additional data\"\n    )\n  )\n\n# Format as a professional table with kable()\nrec_table %>%\n  knitr::kable(\n    caption = \"County-Level Decision Framework for Algorithm Implementation\",\n    align   = c(\"l\",\"r\",\"r\",\"l\",\"l\"),\n    col.names = c(\"County\",\"Median Income\",\"MOE (%)\",\"Reliability\",\"Recommendation\")\n  ) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n```\n\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to\nthe department.\n\n1.  **Counties suitable for immediate algorithmic implementation:**\n    \\[List counties with high confidence data and explain why they're\n    appropriate\\]\n\n2.  **Counties requiring additional oversight:** \\[List counties with\n    moderate confidence data and describe what kind of monitoring would\n    be needed\\]\n\n3.  **Counties needing alternative approaches:** \\[List counties with\n    low confidence data and suggest specific alternatives - manual\n    review, additional surveys, etc.\\]\n\n## Questions for Further Investigation\n\n\\[List 2-3 questions that your analysis raised that you'd like to\nexplore further in future assignments. Consider questions about spatial\npatterns, time trends, or other demographic factors.\\]\n\n# Technical Notes\n\n**Data Sources:** - U.S. Census Bureau, American Community Survey\n2018-2022 5-Year Estimates - Retrieved via tidycensus R package on\n\\[date\\]\n\n**Reproducibility:** - All analysis conducted in R version \\[your\nversion\\] - Census API key required for replication - Complete code and\ndocumentation available at: \\[your portfolio URL\\]\n\n**Methodology Notes:** \\[Describe any decisions you made about data\nprocessing, county selection, or analytical choices that might affect\nreproducibility\\]\n\n**Limitations:** \\[Note any limitations in your analysis - sample size\nissues, geographic scope, temporal factors, etc.\\]\n\n------------------------------------------------------------------------\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n-   [ ] All code chunks run without errors\n-   [ ] All \"\\[Fill this in\\]\" prompts have been completed\n-   [ ] Tables are properly formatted and readable\n-   [ ] Executive summary addresses all four required components\n-   [ ] Portfolio navigation includes this assignment\n-   [ ] Census API key is properly set\n-   [ ] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself.\nYour assignment should be accessible at\n`your-portfolio-url/assignments/assignment_1/your_file_name.html`\n","srcMarkdownNoYaml":"\n\n# Assignment Overview\n\n## Scenario\n\nYou are a data analyst for the **Pennsylvania Department of Human\nServices**. The department is considering implementing an algorithmic\nsystem to identify communities that should receive priority for social\nservice funding and outreach programs. Your supervisor has asked you to\nevaluate the quality and reliability of available census data to inform\nthis decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess\nnot just what the data shows, but how reliable it is and what\ncommunities might be affected by data quality issues.\n\n## Learning Objectives\n\n-   Apply dplyr functions to real census data for policy analysis\n-   Evaluate data quality using margins of error\n-   Connect technical analysis to algorithmic decision-making\n-   Identify potential equity implications of data reliability issues\n-   Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your\nassignment should be accessible at\n`your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this\nassignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an\n`assignments/assignment_1/` folder structure. Update your navigation\nmenu to include:\n\n```         \n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n```\n\nIf there is a special character like comma, you need use double quote\nmark so that the quarto can identify this as text\n\n# Setup\n\n```{r setup}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\nlibrary(dplyr)\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(tigris)\nlibrary(knitr)\nlibrary(stringr)\nlibrary(scales)\nlibrary(kableExtra)\n\n# Set your Census API key\ncensus_api_key(Sys.getenv(\"52f0462d8b4e1e19ee64b25a3196677c5e32e660\"))\n\n# Choose your state for analysis - assign it to a variable called my_state\nmy_state <- \"PA\"\n\n```\n\n**State Selection:** I have chosen **Pennsylvania** for this analysis\nbecause: the scenario explicitly involves the Pennsylvania Department of\nHuman Services, and PA's mix of urban, suburban, and rural counties\nprovides useful variation in ACS reliability for evaluating algorithmic\ndecisions.\n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your\nchosen state.\n\n**Requirements:** - Geography: county level - Variables: median\nhousehold income (B19013_001) and total population (B01003_001)\\\n- Year: 2022 - Survey: acs5 - Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the\n`variables = c(name = \"code\")` syntax.\n\n```{r county-data}\n# Write your get_acs() code here\ncounty_vars = c(\n  med_hh_income = \"B19013_001\",\n  total_pop = \"B01003_001\"\n  )\n\ncounty_data <- get_acs(\n  geography = \"county\",\n  state = my_state,\n  year = 2022,\n  survey = \"acs5\",\n  variables = county_vars,\n  output = \"wide\",\n)\n\n# Clean the county names to remove state name and \"County\"\ncounty_data <- county_data %>%\n  mutate(county_name = str_remove(NAME, paste0(\", \", \"Pennsylvania\")) %>%\n           str_remove(\"County\")\n  )\n  \n# Hint: use mutate() with str_remove()\n\n# Display the first few rows\nhead(county_data)\n\nglimpse(county_data)\n```\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create\nreliability categories.\n\n**Requirements:** - Calculate MOE percentage: (margin of error /\nestimate) \\* 100 - Create reliability categories: - High Confidence: MOE\n\\< 5% - Moderate Confidence: MOE 5-10%\\\n- Low Confidence: MOE \\> 10% - Create a flag for unreliable estimates\n(MOE \\> 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n```{r income-reliability}\n# Calculate MOE percentage and reliability categories using mutate()\ncounty_cat <- county_data %>%\n  mutate(moe_perc = ((med_hh_incomeM / med_hh_incomeE) * 100) , \n           reliability = case_when(moe_perc < 5 ~ \"High Confidence\", \n                                   moe_perc < 10 ~ \"Moderate Confidence\",\n                                   TRUE ~ \"Low Confidence\")\n         )\n\n# Create a summary showing count of counties in each reliability category\ncounty_cat %>%\n  count(reliability, name = \"count\") %>%\n  mutate(share = scales::percent(count / sum(count)))\n\n# Hint: use count() and mutate() to add percentages\n```\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:** - Sort by MOE percentage (highest first) - Select the\ntop 5 counties - Display: county name, median income, margin of error,\nMOE percentage, reliability category - Format as a professional table\nusing `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n```{r high-uncertainty}\n# Create table of top 5 counties by MOE percentage\ntop5_uncertain <- county_cat %>%\n  arrange(desc(moe_perc)) %>%\n  slice(1:5) %>%\n  transmute(\n    county        = county_name,\n    median_income = paste0(\"$\", format(round(med_hh_incomeE), big.mark=\",\")),\n    moe_dollars   = paste0(\"$\", format(round(med_hh_incomeM), big.mark=\",\")),\n    moe_percent   = sprintf(\"%.1f%%\", moe_perc),\n    reliability\n  )\n\n# Format as table with kable() - include appropriate column names and caption\ntop5_uncertain %>%\n  kable(\n    col.names = c(\"County\",\"Median Income\",\"MOE ($)\",\"MOE (%)\",\"Reliability\"),\n    caption   = \"Top 5 Counties by Median Income MOE% (Highest First)\",\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"l\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n**Data Quality Commentary:**\n\nAcross Pennsylvania, the counties with the largest income MOE are small counties such as Forest, Sullivan, Union, Montour, and Elk, with MOE between 6% and 10%. If an algorithm ranks counties by median income without accounting for this uncertainty, these counties can be misclassified because of sampling error and may cross decision thresholds incorrectly. Because they have smaller populations, they should be treated with caution and considered for manual review or aggregation to larger geographies.\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for\ndetailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability\nlevels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to\ncompare how data quality varies.\n\n```{r select-counties}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\ncounty_cat <- county_cat %>% mutate(county_code = substr(GEOID, 3, 5))\n\nselected_counties <- county_cat %>%\n  filter(reliability %in% c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\")) %>%\n  group_by(reliability) %>%\n  slice_head(n = 1) %>%\n  ungroup() %>%\n  select(county_code, county_name, med_hh_incomeE, med_hh_incomeM, moe_perc, reliability)\n\n# Display the selected counties with their key characteristics\nselected_counties %>%\n  dplyr::mutate(\n    `Median Income` = paste0(\"$\", format(round(med_hh_incomeE), big.mark=\",\")),\n    `MOE (%)`       = sprintf(\"%.1f%%\", moe_perc)\n  ) %>%\n  dplyr::select(\n    County = county_name, `Median Income`, `MOE (%)`, Reliability = reliability\n  ) %>%\n  kable(caption = \"Selected Counties for Tract-Level Study\") %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\")) \n\n# Show: county name, median income, MOE percentage, reliability category\n```\n\n**Comment on the output:** Both chosen counties are at the high and moderate confidence levels. The absence of any low confidence counties suggests that county level income is measured with fair stability across the state, though smaller rural places may still sit near the threshold and deserve careful review.\n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected\ncounties.\n\n**Requirements:** - Geography: tract level - Variables: white alone\n(B03002_003), Black/African American (B03002_004), Hispanic/Latino\n(B03002_012), total population (B03002_001) - Use the same state and\nyear as before - Output format: wide - **Challenge:** You'll need county\ncodes, not names. Look at the GEOID patterns in your county data for\nhints.\n\n```{r tract-demographics}\n# Define your race/ethnicity variables with descriptive names\nrace_vars <- c(\n  total    = \"B03002_001\",\n  white    = \"B03002_003\",\n  black    = \"B03002_004\",\n  hispanic = \"B03002_012\"\n)\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\nselected_codes <- selected_counties$county_code\n\ntract_raw <- get_acs(\n  geography = \"tract\",\n  state     = my_state,\n  county    = selected_codes,\n  variables = race_vars,\n  year      = 2022,\n  survey    = \"acs5\",\n  output    = \"wide\"\n)\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\n# Add readable tract and county name columns using str_extract() or similar\n\ntract_data <- tract_raw %>%\n  mutate(county_code = substr(GEOID, 9, 11)) %>%\n  separate(NAME, into = c(\"tract_name\", \"county\", \"state\"),\n           sep = \";\\\\s*\", remove = FALSE, fill = \"right\") %>%\n  mutate(\n    pct_white   = (100 * whiteE    / totalE),\n    pct_black   = (100 * blackE    / totalE),\n    pct_hisp    = (100 * hispanicE / totalE)\n  ) %>%\n  select(-state)\n\n```\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n```{r demographic-analysis}\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\n\ntop_hispanic_tracts <- tract_data %>%\n  group_by(county) %>%\n  arrange(desc(pct_hisp), .by_group = TRUE) %>%\n  slice(1) %>%\n  ungroup() %>%\n  transmute(\n    Tract = tract_name,\n    County = county,\n    `Pct Hispanic/Latino` = pct_hisp,\n    `Total Pop` = totalE\n  )\n\ntop_hispanic_tracts %>%\n  kable(\n    caption   = \"Top % Hispanic/Latino Tract in Each Selected County\",\n    col.names = c(\"County\",\"Tract\",\"Pct Hispanic/Latino\",\"Total Pop\"),\n    align     = c(\"l\",\"l\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\n\ncounty_avgs <- tract_data %>%\n  group_by(county) %>%\n  summarise(\n    Tracts = n(),\n    `Avg % White` = mean(pct_white, na.rm = TRUE),\n    `Avg % Black` = mean(pct_black, na.rm = TRUE),\n    `Avg % Hispanic/Latino` = mean(pct_hisp, na.rm = TRUE)\n  ) %>%\n  rename(County = county)\n\n# Create a nicely formatted table of your results using kable()\ncounty_avgs %>%\n  knitr::kable(\n    caption   = \"Average Demographics by County (Selected Counties)\",\n    col.names = c(\"County\",\"Tracts\",\"Avg % White\",\"Avg % Black\",\"Avg % Hispanic/Latino\"),\n    digits    = c(NA, 0, 2, 2, 2),      # one decimal place for % cols\n    align     = c(\"l\",\"r\",\"r\",\"r\",\"r\")\n  ) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see\nif some communities have less reliable data.\n\n**Requirements:** - Calculate MOE percentages for each demographic\nvariable - Flag tracts where any demographic variable has MOE \\> 15% -\nCreate summary statistics\n\n```{r demographic-moe}\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\ntract_moe <- tract_data %>%\n  mutate(\n    moe_pct_white = ifelse(whiteE    > 0, 100 * whiteM    / whiteE,    NA_real_),\n    moe_pct_black = ifelse(blackE    > 0, 100 * blackM    / blackE,    NA_real_),\n    moe_pct_hisp  = ifelse(hispanicE > 0, 100 * hispanicM / hispanicE, NA_real_),\n    high_moe_any  = (moe_pct_white > 15) | (moe_pct_black > 15) | (moe_pct_hisp > 15)\n  )\n\n# Create summary statistics showing how many tracts have data quality issues\nsummary_tract_moe <- tract_moe %>%\n  group_by(county) %>%\n  summarise(\n    `Tracts (total)`    = n(),\n    `Tracts (high MOE)` = sum(high_moe_any, na.rm = TRUE),\n    `Share high MOE`    = sprintf(\"%.2f%%\", 100 * `Tracts (high MOE)` / `Tracts (total)`)\n  )\n\nsummary_tract_moe %>%\n  kable(\n    col.names = c(\"County\",\"Tracts\",\"High MOE\",\"Share high MOE\"),\n    caption   = \"High-MOE Tracts by County\",\n    align     = c(\"l\",\"r\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly\ndistributed or concentrated in certain types of communities.\n\n```{r pattern-analysis}\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n# Use group_by() and summarize() to create this comparison\n\ntract_pattern <- tract_moe %>%\n  mutate(high_moe_any = ifelse(is.na(high_moe_any), FALSE, high_moe_any)) %>%\n  group_by(county, high_moe_any) %>%\n  summarise(\n    Tracts                 = n(),\n    `Avg Pop`              = mean(totalE, na.rm = TRUE),\n    `Avg % White`          = mean(pct_white, na.rm = TRUE),\n    `Avg % Black`          = mean(pct_black, na.rm = TRUE),\n    `Avg % Hispanic/Latino`= mean(pct_hisp,  na.rm = TRUE),\n    .groups = \"drop_last\"\n  ) %>%\n  mutate(Group = if_else(high_moe_any, \"High-MOE tracts\", \"Other tracts\")) %>%\n  ungroup() %>%\n  rename(County = county) %>%\n  select(County, Group, Tracts, `Avg Pop`, `Avg % White`, `Avg % Black`, `Avg % Hispanic/Latino`)\n\n# Create a professional table showing the patterns\ntract_pattern %>%\n  kable(\n    caption = \"Comparing Tracts With vs. Without High MOE (Any Demographic Variable)\",\n    digits  = c(NA,NA, 0, 0, 2, 2, 2),\n    align   = c(\"l\",\"l\",\"r\",\"r\",\"r\",\"r\",\"r\")\n  ) %>%\n  kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n\n```\n\n**Pattern Analysis:** \\[Describe any patterns you observe. Do certain\ntypes of communities have less reliable data? What might explain this?\\]\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from\nall four analyses.\n\n**Executive Summary Requirements:** 1. **Overall Pattern\nIdentification**: What are the systematic patterns across all your\nanalyses? 2. **Equity Assessment**: Which communities face the greatest\nrisk of algorithmic bias based on your findings? 3. **Root Cause\nAnalysis**: What underlying factors drive both data quality issues and\nbias risk? 4. **Strategic Recommendations**: What should the Department\nimplement to address these systematic issues?\n\n**Executive Summary:**\n\n\\[Your integrated 4-paragraph summary here\\]\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n```{r recommendations-data}\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\nrec_table <- county_cat %>%\n  transmute(\n    County          = county_name,\n    `Median Income` = scales::dollar(round(med_hh_incomeE)),\n    `MOE (%)`       = sprintf(\"%.2f%%\", moe_perc),\n    Reliability     = reliability,\n    Recommendation  = case_when(\n      Reliability == \"High Confidence\"     ~ \"Safe for algorithmic decisions\",\n      Reliability == \"Moderate Confidence\" ~ \"Use with caution — monitor outcomes\",\n      TRUE                                 ~ \"Requires manual review or additional data\"\n    )\n  )\n\n# Format as a professional table with kable()\nrec_table %>%\n  knitr::kable(\n    caption = \"County-Level Decision Framework for Algorithm Implementation\",\n    align   = c(\"l\",\"r\",\"r\",\"l\",\"l\"),\n    col.names = c(\"County\",\"Median Income\",\"MOE (%)\",\"Reliability\",\"Recommendation\")\n  ) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\",\"hover\",\"condensed\"))\n```\n\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to\nthe department.\n\n1.  **Counties suitable for immediate algorithmic implementation:**\n    \\[List counties with high confidence data and explain why they're\n    appropriate\\]\n\n2.  **Counties requiring additional oversight:** \\[List counties with\n    moderate confidence data and describe what kind of monitoring would\n    be needed\\]\n\n3.  **Counties needing alternative approaches:** \\[List counties with\n    low confidence data and suggest specific alternatives - manual\n    review, additional surveys, etc.\\]\n\n## Questions for Further Investigation\n\n\\[List 2-3 questions that your analysis raised that you'd like to\nexplore further in future assignments. Consider questions about spatial\npatterns, time trends, or other demographic factors.\\]\n\n# Technical Notes\n\n**Data Sources:** - U.S. Census Bureau, American Community Survey\n2018-2022 5-Year Estimates - Retrieved via tidycensus R package on\n\\[date\\]\n\n**Reproducibility:** - All analysis conducted in R version \\[your\nversion\\] - Census API key required for replication - Complete code and\ndocumentation available at: \\[your portfolio URL\\]\n\n**Methodology Notes:** \\[Describe any decisions you made about data\nprocessing, county selection, or analytical choices that might affect\nreproducibility\\]\n\n**Limitations:** \\[Note any limitations in your analysis - sample size\nissues, geographic scope, temporal factors, etc.\\]\n\n------------------------------------------------------------------------\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n-   [ ] All code chunks run without errors\n-   [ ] All \"\\[Fill this in\\]\" prompts have been completed\n-   [ ] Tables are properly formatted and readable\n-   [ ] Executive summary addresses all four required components\n-   [ ] Portfolio navigation includes this assignment\n-   [ ] Census API key is properly set\n-   [ ] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself.\nYour assignment should be accessible at\n`your-portfolio-url/assignments/assignment_1/your_file_name.html`\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"assignment1_template.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Assignment 1: Census Data Quality for Policy Decisions","subtitle":"Evaluating Data Reliability for Algorithmic Decision-Making","author":"Kavana Raju","date":"today","editor":{"markdown":{"wrap":72}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}