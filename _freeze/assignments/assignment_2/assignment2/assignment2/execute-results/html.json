{
  "hash": "53339ac4bd179c70f8658bc09d22329e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Kavana Raju\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(scales)\nlibrary(sf)\nlibrary(knitr)\nlibrary(patchwork)\nlibrary(here)\n\n# Load spatial data\npa_counties <- st_read(\"./data/Pennsylvania_County_Boundaries.shp\", quiet = TRUE)\nhospitals <- st_read(\"./data/hospitals.geojson\", quiet = TRUE)\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE, progress_bar = FALSE)\n\n# Check that all data loaded correctly\n#glimpse(pa_counties)\n#glimpse(hospitals)\n#glimpse(census_tracts)\n\ncat(\"pa_counties CRS:\",   st_crs(pa_counties)$input,   \" EPSG:\", st_crs(pa_counties)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\npa_counties CRS: WGS 84 / Pseudo-Mercator  EPSG: 3857 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"hospitals CRS:\",     st_crs(hospitals)$input,     \" EPSG:\", st_crs(hospitals)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nhospitals CRS: WGS 84  EPSG: 4326 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"census_tracts CRS:\", st_crs(census_tracts)$input, \" EPSG:\", st_crs(census_tracts)$epsg, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncensus_tracts CRS: NAD83  EPSG: 4269 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Hospitals in dataset:\", nrow(hospitals), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nHospitals in dataset: 223 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Census tracts in dataset:\", nrow(census_tracts), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCensus tracts in dataset: 3445 \n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- How many hospitals are in your dataset?\n  - 223 hospitals.\n\n- How many census tracts?\n  - 3445 census tracts.\n  \n- What coordinate reference system is each dataset in?\n  - PA county boundaries CRS is WGS 84 Pseudo Mercator EPSG 3857\n  - PA hospitals CRS is WGS 84 EPSG 4326\n  - PA census tracts CRS is NAD 83 EPSG 4269\n  \n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\n\nacs_vars_2022 <- load_variables(2022, \"acs5\", cache = TRUE) \n\nacs_vars_2022_65_above <- acs_vars_2022 %>% \n  filter(concept == \"Sex by Age\") %>%\n  filter(str_detect(label, \"([6-9][5-9]|[7-9][0-9]|85).*years\"))\n\nacs_age_pop <- acs_vars_2022_65_above$name\n\n# In the wide format, we need names assigned to the 12 population vars based on age and sex\nnames(acs_age_pop) <- acs_vars_2022_65_above$label %>%\n  str_to_lower() %>%\n  str_replace_all(\"estimate!!(total!!)?\", \"\") %>%  # remove 'estimate!!' and 'total!!' if present\n  str_replace_all(\"!!|and| \", \"_\") %>%           # replace !!, 'and', and spaces with _\n  str_replace_all(\"years\", \"\") %>%               # remove 'years'\n  str_replace_all(\"[^a-z0-9_]\", \"\")             # remove any remaining punctuation\n\ntract_demographics <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\",\n    acs_age_pop\n  ),\n  state = \"PA\",\n  year = 2022,\n  output = \"wide\"\n)\n\nfinal_tract_demographics <- tract_demographics %>%\n  mutate(\n    pop_65_plus = rowSums(\n      select(., starts_with(\"total_male_\") | starts_with(\"total_female_\")) %>%\n        select(., ends_with(\"E\")),\n      na.rm = TRUE\n    )\n  ) %>%\n  select(GEOID, NAME, total_popE, median_incomeE, pop_65_plus, \n         total_popM, median_incomeM)\n\n# Join to tract boundaries\ntracts_with_data <- census_tracts %>%\n  left_join(final_tract_demographics, by = \"GEOID\")\n\nsum(is.na(tracts_with_data$median_incomeE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 62\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(tracts_with_data$median_incomeE, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 70188\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What year of ACS data are you using?\n  - 2022 ACS Data\n  \n- How many tracts have missing income data?\n  - 62 tracts\n\n- What is the median income across all PA census tracts?\n  - $70188\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    pct_65_plus = 100 * pop_65_plus / if_else(total_popE > 0, total_popE, NA_real_)\n  )\n\n# Compute thresholds on valid rows only\nvalid_rows <- filter(tracts_with_data, !is.na(median_incomeE), !is.na(pct_65_plus))\n\nincome_threshold  <- quantile(valid_rows$median_incomeE, 0.25, na.rm = TRUE)\nelderly_threshold <- quantile(valid_rows$pct_65_plus,   0.75, na.rm = TRUE)\n\n# Flag vulnerability only when both pieces exist\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    low_income  = if_else(!is.na(median_incomeE), median_incomeE <= income_threshold, NA),\n    high_elderly = if_else(!is.na(pct_65_plus),   pct_65_plus   >= elderly_threshold, NA),\n    vulnerable = low_income & high_elderly\n  )\n\n# Counts over tracts with known vulnerability status\nn_vulnerable <- sum(tracts_with_data$vulnerable %in% TRUE, na.rm = TRUE)\nn_known      <- sum(!is.na(tracts_with_data$vulnerable))\npct_vulnerable <- 100 * n_vulnerable / n_known\n\n# Print thresholds and results to keep prose in sync\ncat(\"Income threshold Q1:\", scales::dollar(round(income_threshold)), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIncome threshold Q1: $55,924 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Age 65+ threshold Q3:\", round(elderly_threshold, 1), \"%\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAge 65+ threshold Q3: 23.1 %\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Vulnerable tracts:\", n_vulnerable, \"of\", n_known,\n    \"(\", scales::percent(pct_vulnerable/100, accuracy = 0.1), \")\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nVulnerable tracts: 165 of 3409 ( 4.8% )\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What income threshold did you choose and why?\n  - I based the income cutoff on statewide percentiles to identify areas that fall noticeably below the typical income level in Pennsylvania. The lower quartile served as the cutoff, representing the bottom twenty-five percent of tract median incomes.For the 2022 data this value is approximately $55924. This approach updates automatically whenever new census data are released, keeping the measure consistent over time.\n\n- What elderly population threshold did you choose and why?\n  - For the older-adult population I again relied on a percentile measure, selecting the upper quartile of tracts with the largest shares of residents aged sixty-five and above. This captures neighborhoods with a noticeably higher concentration of older adults compared with the rest of the state. In the 2022 data that threshold is around 23.1 percent of residents aged sixty-five or older.\n\n- How many tracts meet your vulnerability criteria?\n  - A total of 165 tracts satisfy both parts of the definition, combining lower household incomes with larger elderly populations relative to other Pennsylvania tracts.\n\n- What percentage of PA census tracts are considered vulnerable by your definition?\n  - ~ 4.8% of PA census tracts are considered vulnerable.\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\npa_projection <- 3365 # NAD83 / Pennsylvania South\n\npa_counties <- st_transform(pa_counties, crs = pa_projection)\ntracts_with_data <- st_transform(tracts_with_data, crs = pa_projection)\nhospitals <- st_transform(hospitals, crs = pa_projection)\n\n# Calculate distance from each tract centroid to nearest hospital\ntract_centroids <- st_centroid(tracts_with_data)\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    dist_to_hospital = st_distance(tract_centroids, hospitals)  %>% \n    apply(1, min) %>% \n    as.numeric() / 1609.34\n  )\n\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  summarise(\n    avg_distance = mean(dist_to_hospital, na.rm = TRUE),\n    max_distance = max(dist_to_hospital, na.rm = TRUE),\n    more_than_15_miles = sum(dist_to_hospital > 15, na.rm = TRUE),\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  avg_distance max_distance more_than_15_miles\n1     15.57051     62.85684                 56\n```\n\n\n:::\n:::\n\n\n**Requirements:**\n\n- Use an appropriate projected coordinate system for Pennsylvania\n\n- Calculate distances in miles\n\n- Explain why you chose your projection\n  - I used the NAD 83 Pennsylvania South projection EPSG 3365 to keep measurements in linear units across the state. I also considered using the NAD 83 Conus Albers projection EPSG 5070 since it offers consistent accuracy statewide, but chose 3365 for efficiency and compatibility with the existing data. The distortion in northern counties is minor and acceptable for this level of analysis.\n\n**Questions to answer:**\n\n- What is the average distance to the nearest hospital for vulnerable tracts?\n  - 15.57 miles\n\n- What is the maximum distance?\n  - 62.86 miles\n\n- How many vulnerable tracts are more than 15 miles from the nearest hospital?\n  - 56 tracts\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\ntracts_with_data <- tracts_with_data %>%\n  mutate(\n    underserved = vulnerable & dist_to_hospital > 15\n  )\n\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  summarise(\n    n_underserved = sum(underserved, na.rm = TRUE),\n    n_vulnerable = sum(vulnerable, na.rm = TRUE),\n    pct_vulnerable_underserved = sum(underserved, na.rm = TRUE) / sum(vulnerable, na.rm = TRUE) * 100\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  n_underserved n_vulnerable pct_vulnerable_underserved\n1            56          165                   33.93939\n```\n\n\n:::\n:::\n\n\n**Questions to answer:**\n- How many tracts are underserved?\n  - 56 tracts\n\n- What percentage of vulnerable tracts are underserved?\n  - 33.94%\n\n- Does this surprise you? Why or why not?\n  - Not really. Most of these tracts are found in rural parts of Pennsylvania where hospitals are spread farther apart. These areas also tend to have older populations and lower incomes, so longer travel distances to healthcare facilities are expected.\n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\ntracts_by_county <- tracts_with_data %>% \n  st_join(pa_counties %>% select(COUNTY_NAM), largest = TRUE)\n\n# Aggregate statistics by county\ncounty_stats <- tracts_by_county %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    total_tracts = n(), # including to understand the scale of the county\n    vulnerable_tracts = sum(vulnerable, na.rm = TRUE),\n    underserved_tracts = sum(underserved, na.rm = TRUE),\n    pct_vulnerable_underserved = round(\n      ifelse(vulnerable_tracts > 0, \n             (underserved_tracts / vulnerable_tracts) * 100, 0), 1),\n    avg_dist_to_hospital = round(mean(dist_to_hospital, na.rm = TRUE), 2),\n    total_pop_in_vulnerable = sum(total_popE[vulnerable == TRUE], na.rm = TRUE),\n  )  %>%\n  arrange(desc(pct_vulnerable_underserved))\n\ncounty_stats %>%\n  kable(col.names = c(\"County\", \"Total Tracts\", \"Vulnerable Tracts\", \n                      \"Underserved Tracts\", \"% Vulnerable\", \"Avg Distance (mi)\", \"Total Pop in Vulnerable Tracts\"))\n```\n\n::: {.cell-output-display}\n\n\n|County         | Total Tracts| Vulnerable Tracts| Underserved Tracts| % Vulnerable| Avg Distance (mi)| Total Pop in Vulnerable Tracts|\n|:--------------|------------:|-----------------:|------------------:|------------:|-----------------:|------------------------------:|\n|ARMSTRONG      |           19|                 1|                  1|        100.0|             26.91|                           2106|\n|BRADFORD       |           15|                 1|                  1|        100.0|             33.39|                           5466|\n|CLARION        |           13|                 2|                  2|        100.0|             28.45|                           3586|\n|CLINTON        |           10|                 1|                  1|        100.0|             31.59|                           3176|\n|ELK            |            9|                 1|                  1|        100.0|             26.96|                           1557|\n|FOREST         |            2|                 1|                  1|        100.0|             60.38|                           2701|\n|HUNTINGDON     |           13|                 1|                  1|        100.0|             32.19|                           2558|\n|INDIANA        |           24|                 2|                  2|        100.0|             19.06|                           5703|\n|JUNIATA        |            6|                 1|                  1|        100.0|             49.24|                           1782|\n|LANCASTER      |          116|                 1|                  1|        100.0|             17.15|                           4387|\n|LEBANON        |           33|                 1|                  1|        100.0|             13.89|                           3107|\n|LYCOMING       |           32|                 1|                  1|        100.0|             14.63|                           2052|\n|MONROE         |           51|                 1|                  1|        100.0|             32.97|                           1299|\n|NORTHUMBERLAND |           25|                 4|                  4|        100.0|             32.30|                           9087|\n|SULLIVAN       |            4|                 1|                  1|        100.0|             74.39|                            918|\n|SUSQUEHANNA    |           12|                 1|                  1|        100.0|             25.63|                           1612|\n|VENANGO        |           17|                 1|                  1|        100.0|             22.35|                           4785|\n|WAYNE          |           17|                 1|                  1|        100.0|             30.51|                           2445|\n|CLEARFIELD     |           20|                 4|                  3|         75.0|             43.07|                          13056|\n|SOMERSET       |           24|                 4|                  3|         75.0|             20.98|                          11454|\n|MCKEAN         |           12|                 3|                  2|         66.7|             24.22|                           7832|\n|POTTER         |            7|                 3|                  2|         66.7|             36.16|                           9062|\n|WARREN         |           13|                 3|                  2|         66.7|             21.04|                           8041|\n|BEDFORD        |           12|                 2|                  1|         50.0|             31.23|                           7578|\n|CRAWFORD       |           23|                 4|                  2|         50.0|             24.01|                           9072|\n|DAUPHIN        |           67|                 2|                  1|         50.0|             15.09|                           8410|\n|JEFFERSON      |           13|                 2|                  1|         50.0|             15.63|                           4566|\n|LAWRENCE       |           28|                 2|                  1|         50.0|             16.65|                           4200|\n|FAYETTE        |           36|                 7|                  3|         42.9|             18.45|                          25230|\n|BLAIR          |           38|                 3|                  1|         33.3|              9.25|                           7602|\n|CAMBRIA        |           42|                 6|                  2|         33.3|             17.07|                          13551|\n|NORTHAMPTON    |           74|                 3|                  1|         33.3|             13.58|                          10073|\n|LUZERNE        |          101|                 7|                  2|         28.6|             14.26|                          21062|\n|WESTMORELAND   |          113|                11|                  3|         27.3|             14.57|                          25093|\n|ERIE           |           73|                 4|                  1|         25.0|             17.28|                          12216|\n|BEAVER         |           53|                 5|                  1|         20.0|             15.16|                           9763|\n|ALLEGHENY      |          394|                22|                  1|          4.5|              7.45|                          51790|\n|ADAMS          |           27|                 0|                  0|          0.0|             20.60|                              0|\n|BERKS          |          107|                 0|                  0|          0.0|             13.78|                              0|\n|BUCKS          |          147|                 0|                  0|          0.0|             12.51|                              0|\n|BUTLER         |           47|                 0|                  0|          0.0|             19.28|                              0|\n|CAMERON        |            2|                 0|                  0|          0.0|             62.56|                              0|\n|CARBON         |           17|                 0|                  0|          0.0|             19.58|                              0|\n|CENTRE         |           41|                 0|                  0|          0.0|             18.69|                              0|\n|CHESTER        |          124|                 0|                  0|          0.0|             22.04|                              0|\n|COLUMBIA       |           16|                 0|                  0|          0.0|             12.66|                              0|\n|CUMBERLAND     |           55|                 1|                  0|          0.0|             17.00|                           2438|\n|DELAWARE       |          152|                 1|                  0|          0.0|              7.61|                           2972|\n|FRANKLIN       |           33|                 2|                  0|          0.0|             16.13|                           7949|\n|FULTON         |            3|                 0|                  0|          0.0|             23.65|                              0|\n|GREENE         |           10|                 0|                  0|          0.0|             24.44|                              0|\n|LACKAWANNA     |           60|                 5|                  0|          0.0|              8.85|                          13322|\n|LEHIGH         |           81|                 1|                  0|          0.0|              9.77|                           3974|\n|MERCER         |           35|                 5|                  0|          0.0|             12.60|                          16686|\n|MIFFLIN        |           13|                 0|                  0|          0.0|             18.31|                              0|\n|MONTGOMERY     |          219|                 1|                  0|          0.0|              8.26|                           2069|\n|MONTOUR        |            4|                 0|                  0|          0.0|             10.31|                              0|\n|PERRY          |           10|                 0|                  0|          0.0|             43.52|                              0|\n|PHILADELPHIA   |          408|                16|                  0|          0.0|              3.65|                          61873|\n|PIKE           |           25|                 0|                  0|          0.0|             63.07|                              0|\n|SCHUYLKILL     |           42|                 3|                  0|          0.0|             21.05|                          11194|\n|SNYDER         |            8|                 0|                  0|          0.0|             47.46|                              0|\n|TIOGA          |           10|                 1|                  0|          0.0|             35.01|                           3459|\n|UNION          |           11|                 2|                  0|          0.0|             22.49|                           9762|\n|WASHINGTON     |           62|                 3|                  0|          0.0|             14.51|                           5008|\n|WYOMING        |            7|                 0|                  0|          0.0|             42.57|                              0|\n|YORK           |          108|                 4|                  0|          0.0|             16.18|                          11199|\n\n\n:::\n\n```{.r .cell-code}\ncounty_stats %>%\n  head(18) %>%\n  select(COUNTY_NAM, vulnerable_tracts, underserved_tracts, pct_vulnerable_underserved)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 18 × 4\n   COUNTY_NAM     vulnerable_tracts underserved_tracts pct_vulnerable_underser…¹\n   <chr>                      <int>              <int>                     <dbl>\n 1 ARMSTRONG                      1                  1                       100\n 2 BRADFORD                       1                  1                       100\n 3 CLARION                        2                  2                       100\n 4 CLINTON                        1                  1                       100\n 5 ELK                            1                  1                       100\n 6 FOREST                         1                  1                       100\n 7 HUNTINGDON                     1                  1                       100\n 8 INDIANA                        2                  2                       100\n 9 JUNIATA                        1                  1                       100\n10 LANCASTER                      1                  1                       100\n11 LEBANON                        1                  1                       100\n12 LYCOMING                       1                  1                       100\n13 MONROE                         1                  1                       100\n14 NORTHUMBERLAND                 4                  4                       100\n15 SULLIVAN                       1                  1                       100\n16 SUSQUEHANNA                    1                  1                       100\n17 VENANGO                        1                  1                       100\n18 WAYNE                          1                  1                       100\n# ℹ abbreviated name: ¹​pct_vulnerable_underserved\n```\n\n\n:::\n\n```{.r .cell-code}\ntracts_by_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    underserved_tracts = n(),\n    vulnerable_pop_far_from_hospitals = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  arrange(desc(vulnerable_pop_far_from_hospitals)) %>%\n  head(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  COUNTY_NAM     underserved_tracts vulnerable_pop_far_from_hospitals\n  <chr>                       <int>                             <dbl>\n1 FAYETTE                         3                             13304\n2 NORTHUMBERLAND                  4                              9087\n3 WESTMORELAND                    3                              8574\n4 CLEARFIELD                      3                              7771\n5 SOMERSET                        3                              7209\n```\n\n\n:::\n:::\n\n\n**Required county-level statistics:**\n\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n**Questions to answer:**\n\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?\n  - 18 counties share the same highest percentage of underserved vulnerable tracts. These are listed in the output table above.\n\n- Which counties have the most vulnerable people living far from hospitals?\n  - Fayette, Northumberland, Westmoreland, and Clearfield, and Somerset.\n\n- Are there any patterns in where underserved counties are located?\n  - Most underserved counties are rural and spread across central and western Pennsylvania. These areas generally have lower population densities, limited hospital availability, and longer travel distances between communities and healthcare facilities.\n\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\ntracts_by_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    underserved_tracts = n(),\n    vulnerable_pop_far_from_hospitals = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  arrange(desc(vulnerable_pop_far_from_hospitals)) %>%\n  head(10) %>%\n  kable(\n    col.names = c(\"County\", \"Underserved Tracts\", \"Total Population\"),\n    align = c(\"l\", \"r\", \"r\"),\n    format.args = list(big.mark = \",\"),\n    caption = \"Top 10 Priority Counties for Healthcare Investment - Ranked by total population in underserved vulnerable tracts (>15 miles from nearest hospital)\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment - Ranked by total population in underserved vulnerable tracts (>15 miles from nearest hospital)\n\n|County         | Underserved Tracts| Total Population|\n|:--------------|------------------:|----------------:|\n|FAYETTE        |                  3|           13,304|\n|NORTHUMBERLAND |                  4|            9,087|\n|WESTMORELAND   |                  3|            8,574|\n|CLEARFIELD     |                  3|            7,771|\n|SOMERSET       |                  3|            7,209|\n|LUZERNE        |                  2|            5,728|\n|INDIANA        |                  2|            5,703|\n|BRADFORD       |                  1|            5,466|\n|MCKEAN         |                  2|            5,452|\n|WARREN         |                  2|            5,103|\n\n\n:::\n:::\n\n\nNote: Vulnerable tracts are those in the lowest twenty-five percent of median household income and the highest twenty-five percent of population aged sixty-five or older. Underserved tracts are the subset of those areas located more than fifteen miles from the nearest hospital.\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nThe following map illustrates healthcare access disparities across Pennsylvania by showing where vulnerable populations live far from hospitals. Counties are shaded according to the share of vulnerable tracts that are underserved, while hospital locations appear as red circles. The darker blue areas highlight counties with greater accessibility challenges, most notably in rural parts of central and north-eastern Pennsylvania.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\ncounty_map_data <- pa_counties %>%\n  left_join(county_stats, by = \"COUNTY_NAM\")\n\nggplot() +\n  geom_sf(data = county_map_data, \n          aes(fill = pct_vulnerable_underserved),\n          color = \"white\", \n          size = 0.3) +\n  geom_sf(data = hospitals, \n          color = \"red\", \n          size = 0.5, \n          alpha = 0.75,\n          shape = 1) +\n  scale_fill_gradient(\n    low = \"#deebf7\",\n    high = \"#08306b\",\n    na.value = \"grey90\",\n    name = \"% of Vulnerable Census Tracts\\nthat are Underserved \",\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  labs(\n    title = \"Healthcare Access Challenges in Pennsylvania\",\n    subtitle = \"Percentage of vulnerable tracts in a county that are underserved (>15 miles from a hospital)\",\n    caption = \"Vulnerable tracts: bottom 25% in median income & top 25% in population 65+, relative to the rest of PA\\nRed circles indicate hospital locations\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5),\n    plot.caption = element_text(size = 8, hjust = 0.5),\n    legend.position = \"left\"\n  )\n```\n\n::: {.cell-output-display}\n![](assignment2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nThis map highlights census tracts that are both economically and demographically vulnerable yet located far from hospitals. The red areas represent tracts whose centers lie more than 15 miles from the nearest hospital. Most of these tracts appear in rural parts of central and western Pennsylvania.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\nggplot() +\n  geom_sf(data = tracts_with_data, \n          fill = \"gray85\", \n          color = \"white\", \n          size = 0.1) +\n  geom_sf(data = tracts_with_data %>% filter(underserved == TRUE), \n          fill = \"red\",\n          color = \"white\", \n          size = 0.1) +\n  geom_sf(data = pa_counties, \n          fill = NA, \n          color = \"black\", \n          size = 0.5) +\n  # Hospital locations\n  geom_sf(data = hospitals, \n          color = \"#08306b\", \n          size = 0.5, \n          alpha = 0.75,\n          shape = 1) +\n  labs(\n    title = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Red areas show vulnerable tracts where the center is more than 15 miles from the nearest hospital\",\n    caption = \"Vulnerable tracts: bottom 25% in median income & top 25% in population 65+, relative to the rest of PA\\nBlue circles indicate hospital locations\"\n  ) +\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14, hjust = 0.5),\n    plot.subtitle = element_text(size = 10, hjust = 0.5, margin = margin(b = 10)),\n    plot.caption = element_text(size = 8, hjust = 0, margin = margin(t = 10)),\n    plot.margin = margin(20, 20, 20, 20)\n  )\n```\n\n::: {.cell-output-display}\n![](assignment2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n---\n\n### Chart: Distribution Analysis\n\nThe histogram below shows how far vulnerable tracts are from their nearest hospital. Most tracts fall within fifteen miles, indicating reasonable access, but a smaller group extends far beyond that distance. The dashed red line marks the fifteen-mile cutoff used to define underserved areas, highlighting the small but significant share of tracts facing long travel distances to care.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\ntracts_with_data %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  ggplot(aes(x = dist_to_hospital)) +\n  geom_histogram(bins = 30, fill = \"#08306b\", color = \"white\") +\n  geom_vline(xintercept = 15, linetype = \"dashed\", color = \"red\", size = 1) +\n  labs(\n    title = \"Distance to Nearest Hospital for Vulnerable Tracts\",\n    x = \"Distance (miles)\",\n    y = \"Number of Vulnerable Tracts\",\n    caption = \"Vulnerable tracts represent the lowest quarter of median household income and the highest quarter of residents aged 65 and older across Pennsylvania.\\nThe red dashed line marks the 15-mile threshold used to classify underserved areas.\\nMost tracts are located close to hospitals, while a smaller number extend far beyond this limit, forming a long right tail in the distribution.\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.caption = element_text(hjust = 0, size = 8, lineheight = 1.1)\n  )\n```\n\n::: {.cell-output-display}\n![](assignment2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\n**Infrastructure & Services: Polling Place Accessibility**\n- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)\n- **Question:** \"Are polling places accessible for elderly and disabled voters?\"\n- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access\n- **Policy relevance:** Voting rights, election infrastructure, ADA compliance\n\n### Your Analysis\n\n1. **Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\npolling_places <- st_read(\"./data/polling_places.geojson\", quiet = TRUE)\nst_crs(polling_places)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\npolling_places <- st_transform(polling_places, crs = pa_projection)\nst_crs(polling_places)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"EPSG:3365\"\n```\n\n\n:::\n\n```{.r .cell-code}\nphilly_tracts <- tracts_by_county %>%\n  filter(COUNTY_NAM == \"PHILADELPHIA\")\n\npolling_places %>%\n  st_drop_geometry() %>%\n  count(accessibility_code) %>%\n  mutate(\n    percentage = round(n / sum(n) * 100, 1),\n    accessibility_type = case_when(\n      accessibility_code == \"A\" ~ \"Alternate Entrance\",\n      accessibility_code == \"B\" ~ \"Substantially Accessible\",\n      accessibility_code == \"F\" ~ \"Fully Accessible\",\n      accessibility_code == \"M\" ~ \"Accessibility Modified\",\n      accessibility_code == \"N\" ~ \"Not Accessible\",\n      accessibility_code == \"R\" ~ \"Accessible With Ramp\",\n      TRUE ~ \"Unknown\"\n    )\n  ) %>%\n  arrange(desc(n)) %>%\n  select(accessibility_code, accessibility_type, n, percentage) %>%\n  bind_rows(\n    summarise(., \n              accessibility_code = \"TOTAL\",\n              accessibility_type = \"\",\n              n = sum(n),\n              percentage = sum(percentage))\n  ) %>%\n  kable(\n    col.names = c(\"Code\", \"Accessibility Type\", \"Count\", \"%\"),\n    align = c(\"l\", \"l\", \"r\", \"r\"),\n    caption = \"Polling Locations in Philadelphia by Accesibility Type\"\n  )\n```\n\n::: {.cell-output-display}\n\n\nTable: Polling Locations in Philadelphia by Accesibility Type\n\n|Code  |Accessibility Type       | Count|     %|\n|:-----|:------------------------|-----:|-----:|\n|M     |Accessibility Modified   |   740|  43.5|\n|F     |Fully Accessible         |   674|  39.6|\n|A     |Alternate Entrance       |   166|   9.7|\n|R     |Accessible With Ramp     |    72|   4.2|\n|B     |Substantially Accessible |    51|   3.0|\n|TOTAL |                         |  1703| 100.0|\n\n\n:::\n\n```{.r .cell-code}\nsepta_bus_stops <- st_read(\"./data/2022_SEPTA_Bus_Stops.geojson\", quiet = TRUE)\n\nst_crs(septa_bus_stops)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsepta_bus_stops <- st_transform(septa_bus_stops, crs = pa_projection)\nst_crs(septa_bus_stops)$input\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"EPSG:3365\"\n```\n\n\n:::\n\n```{.r .cell-code}\nphilly_bus_stops <- septa_bus_stops %>%\n  st_filter(philly_tracts)\n```\n:::\n\n\n**Questions to answer:**\n\n- What dataset did you choose and why?\n  - I used the polling place dataset because it provides detailed accessibility classifications for each voting site, which helps assess physical access for residents with mobility needs. To complement this, I included SEPTA bus stop data to examine how easily polling sites can be reached by public transit.\n\n- What is the data source and date?\n  - The polling place data are from OpenDataPhilly, last updated on December 8, 2014.The SEPTA bus stop dataset comes from the SEPTA Open Data Portal (2022).\n  \n- How many features does it contain?\n  - There are 1,703 polling places in Philadelphia and 18,066 bus stops across SEPTA’s service area. When filtered to bus stops within Philadelphia census tracts, the count reduces to 10,654.\n\n- What CRS is it in? Did you need to transform it?\n  - Both datasets were originally in the WGS 84 coordinate system and were reprojected to EPSG 3365 to align with the Pennsylvania State Plane South coordinate system used in this analysis.\n\n---\n\n2. **Pose a research question**\n\nWhich polling places in Philadelphia are located beyond 5, 10, and 15 minute walking distances from the nearest bus stop?\n\n---\n\n3. **Conduct spatial analysis**\n\nThis step evaluates how far polling sites are from nearby bus stops to identify locations that may be less accessible by public transit. To do this, buffer zones were generated around all bus stops to represent 5, 10, and 15 minute walking distances. Polling locations outside these buffer areas were flagged, and straight-line distances to the nearest stop were calculated for each site.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create walking-distance buffers (0.2, 0.4, 0.6 miles converted to feet)\nbus_buf_5 <- st_buffer(philly_bus_stops, dist = 0.20 * 5280)\nbus_buf_10 <- st_buffer(philly_bus_stops, dist = 0.40 * 5280)\nbus_buf_15 <- st_buffer(philly_bus_stops, dist = 0.60 * 5280)\n\n# Merge buffers into continuous coverage zones for simpler comparison\nzone_5 <- st_union(bus_buf_5)\nzone_10 <- st_union(bus_buf_10)\nzone_15 <- st_union(bus_buf_15)\n\n# Identify polling places that fall outside each buffer zone\npolling_out_5 <- polling_places %>% st_difference(zone_5)\npolling_out_10 <- polling_places %>% st_difference(zone_10)\npolling_out_15 <- polling_places %>% st_difference(zone_15)\n\n# Compute distance from every polling place to its nearest bus stop\npolling_access <- polling_places %>%\n  mutate(\n    dist_to_stop = st_distance(., philly_bus_stops) %>%\n      apply(1, min) %>%\n      as.numeric() / 5280,  # feet to miles\n    over_5  = if_else(is.na(dist_to_stop), FALSE, dist_to_stop > 0.20),\n    over_10 = if_else(is.na(dist_to_stop), FALSE, dist_to_stop > 0.40),\n    over_15 = if_else(is.na(dist_to_stop), FALSE, dist_to_stop > 0.60)\n  )\n\n# Summarize accessibility counts\npolling_access %>%\nst_drop_geometry() %>%\nsummarise(\ntotal_sites = n(),\nbeyond_5min = sum(over_5, na.rm = TRUE),\nbeyond_10min = sum(over_10, na.rm = TRUE),\nbeyond_15min = sum(over_15, na.rm = TRUE),\npct_5min = round(beyond_5min / total_sites * 100, 1),\npct_10min = round(beyond_10min / total_sites * 100, 1),\npct_15min = round(beyond_15min / total_sites * 100, 1)\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  total_sites beyond_5min beyond_10min beyond_15min pct_5min pct_10min\n1        1703         106            3            0      6.2       0.2\n  pct_15min\n1         0\n```\n\n\n:::\n\n```{.r .cell-code}\n#Map 1: Polling places more than 5 minutes from a bus stop\nmap_5 <- ggplot() +\ngeom_sf(data = philly_tracts, fill = \"gray97\", color = \"white\", linewidth = 0.2) +\ngeom_sf(data = polling_access %>% filter(over_5),\ncolor = \"#d95f02\", size = 0.6, alpha = 0.8) + # Teal\ngeom_sf(data = polling_access %>% filter(!over_5),\ncolor = \"gray70\", size = 0.3, alpha = 0.4) +\ntheme_void() +\nlabs(title = \"Beyond 5-Minute Walk\") +\ntheme(plot.title = element_text(hjust = 0.5, face = \"bold\", size = 11))\n\n# Map 2: Polling places beyond 10 minutes\nmap_10 <- ggplot() +\ngeom_sf(data = philly_tracts, fill = \"gray97\", color = \"white\", linewidth = 0.2) +\ngeom_sf(data = polling_access %>% filter(over_10),\ncolor = \"#d95f02\", size = 0.6, alpha = 0.8) + # Indigo\ngeom_sf(data = polling_access %>% filter(!over_10),\ncolor = \"gray70\", size = 0.3, alpha = 0.4) +\ntheme_void() +\nlabs(title = \"Beyond 10-Minute Walk\") +\ntheme(plot.title = element_text(hjust = 0.5, face = \"bold\", size = 11))\n\n# Map 3: Polling places beyond 15 minutes\nmap_15 <- ggplot() +\ngeom_sf(data = philly_tracts, fill = \"gray97\", color = \"white\", linewidth = 0.2) +\ngeom_sf(data = polling_access %>% filter(over_15),\ncolor = \"#d95f02\", size = 0.6, alpha = 0.8) + # Burnt orange accent\ngeom_sf(data = polling_access %>% filter(!over_15),\ncolor = \"gray70\", size = 0.3, alpha = 0.4) +\ntheme_void() +\nlabs(title = \"Beyond 15-Minute Walk\") +\ntheme(plot.title = element_text(hjust = 0.5, face = \"bold\", size = 11))\n\n# Combine maps\nmap_5 + map_10 + map_15 +\nplot_annotation(\ntitle = \"Philadelphia Polling Places Outside Walking Distance from Bus Stops\",\nsubtitle = \"Points show polling locations beyond 5, 10, and 15-minute walks to the nearest bus stop\",\ntheme = theme(\nplot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\nplot.subtitle = element_text(hjust = 0.5, size = 10)\n)\n)\n```\n\n::: {.cell-output-display}\n![](assignment2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n**Interpretation:**\nPhiladelphia has a total of 1703 polling locations. About 106 of them, or 6 percent, are located more than a five minute walk from a bus stop. Only three sites are farther than ten minutes, and none are beyond fifteen minutes. Most of these polling places are found along the city’s outer areas where the street network is less dense and transit coverage is limited. Overall, the majority of polling sites are within a short walking distance to bus service, but the few distant ones highlight where pedestrian access and transit connectivity could be improved, especially in neighborhoods at the city’s edge.\n\n## Finally - A few comments about your incorporation of feedback!\nBroke down my code even more and cleaned up the document.\n\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n2. Submit the correct and working links of your assignment on Canvas\n\n---\n\n",
    "supporting": [
      "assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}